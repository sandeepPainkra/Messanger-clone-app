{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep painkra\\\\Pictures\\\\React_js\\\\React-Js-2021\\\\Reactjs-Projects2021\\\\Projects-from-Youtube\\\\messenger-clone\\\\src\\\\App.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport Flipmove from \"react-flip-move\";\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [message, setMessage] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    db.collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(onsnapshot => {\n      setMessage(onsnapshot.docs.map(doc => ({\n        id: doc.id,\n        message: doc.data()\n      })));\n    });\n  }, []);\n  useEffect(() => {\n    setUsername(prompt(\"Username:\"));\n  }, []);\n\n  const SendMessage = event => {\n    event.preventDefault(); // Add into database\n\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setMessage(olditem => {\n      return [...olditem, {\n        username: username,\n        message: input\n      }];\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forAlign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, \"Facebook Messenger-Clone\\uD83D\\uDE80\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, \"Hello \", username), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"app_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }\n  }, \"Send Message\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"input\",\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !input,\n    type: \"submit\",\n    onClick: SendMessage,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Send message\")), /*#__PURE__*/React.createElement(Flipmove, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, message.map(({\n    id,\n    message\n  }) => {\n    return /*#__PURE__*/React.createElement(Message, {\n      key: id,\n      username: username,\n      message: message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }\n    });\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/sandeep painkra/Pictures/React_js/React-Js-2021/Reactjs-Projects2021/Projects-from-Youtube/messenger-clone/src/App.jsx"],"names":["React","useEffect","useState","Button","FormControl","Input","InputLabel","Message","db","firebase","Flipmove","SendIcon","IconButton","App","input","setInput","message","setMessage","username","setUsername","collection","orderBy","onSnapshot","onsnapshot","docs","map","doc","id","data","prompt","SendMessage","event","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","olditem","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\r\nimport Message from \"./Message\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\"\r\nimport Flipmove from \"react-flip-move\"\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst App = () => {\r\n   const [input, setInput] = useState(\"\");\r\n   const [message, setMessage] = useState([]);\r\n   const [username, setUsername] = useState(\"\");\r\n\r\n   useEffect(()=>{\r\n       db.collection(\"messages\").orderBy(\"timestamp\",\"desc\").onSnapshot(onsnapshot=>{\r\n          setMessage(onsnapshot.docs.map(doc=>({id:doc.id,message:doc.data()})))\r\n       });\r\n   },[])\r\n   useEffect(() => {\r\n      setUsername(prompt(\"Username:\"));\r\n   }, []);\r\n\r\n\r\n   const SendMessage = (event) => {\r\n      event.preventDefault();\r\n\r\n      // Add into database\r\n      db.collection(\"messages\").add({\r\n         message:input,\r\n         username:username,\r\n         timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n      })\r\n\r\n\r\n      setMessage((olditem) => {\r\n         return [...olditem, { username: username, message: input }];\r\n      });\r\n      setInput(\"\");\r\n   };\r\n\r\n   return (\r\n      <div className=\"forAlign\">\r\n         <h2>Facebook Messenger-CloneğŸš€</h2>\r\n         <h3>Hello {username}</h3>\r\n         <br />\r\n         <form className=\"app_form\">\r\n            <FormControl>\r\n               <InputLabel htmlFor=\"my-input\">Send Message</InputLabel>\r\n               <Input className=\"input\"\r\n                  value={input}\r\n                  onChange={(event) => setInput(event.target.value)}\r\n               />\r\n            </FormControl>\r\n\r\n          <IconButton></IconButton>\r\n            <Button\r\n               disabled={!input}\r\n               type=\"submit\"\r\n               onClick={SendMessage}\r\n               variant=\"contained\"\r\n               color=\"primary\"\r\n            >\r\n               Send message\r\n            </Button>\r\n         </form>\r\n        \r\n        <Flipmove>\r\n         {message.map(({id,message}) => {\r\n            return <Message key={id} username={username} message={message} />;\r\n         })}\r\n         </Flipmove>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}